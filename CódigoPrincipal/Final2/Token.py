# -*- coding: utf-8 -*-
"""Teste-Conecta.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Khds0wsdR77B7XFzUV5yKM5OxdEKjhsB
"""

# -*- coding: utf-8 -*-
"""Token.py"""

import os
from dotenv import load_dotenv
import pymongo
from langchain_huggingface import HuggingFaceEndpoint
import datetime

# Carregar variáveis de ambiente
load_dotenv()
HF_TOKEN = os.getenv("HF_TOKEN")
MONGO_URI = os.getenv("MONGO_URI")

# Configuração do MongoDB
DB_NAME = "conecta"
COLLECTION_NAME = "token_usage"

def store_token_usage_in_mongodb(text, token_count, llm_model_name, collection):
    """
    Armazena os dados de tokenização no MongoDB.

    Args:
        text (str): O texto original que foi tokenizado.
        token_count (int): O número de tokens.
        llm_model_name (str): O nome do modelo LLM usado para tokenizar.
        collection (pymongo.collection.Collection): A coleção MongoDB para inserir os dados.
    """
    try:
        document = {
            "original_text": text,
            "token_count": token_count,
            "llm_model": llm_model_name,
            "timestamp": datetime.datetime.now(),
        }
        result = collection.insert_one(document)
        print(f"Dados de token inseridos no MongoDB com ID: {result.inserted_id}")
    except Exception as e:
        print(f"Erro ao armazenar dados no MongoDB: {e}")

if __name__ == "__main__":
    # Inicializar o modelo de LLM
    llm = HuggingFaceEndpoint(
        repo_id="google/flan-t5-small",
        huggingfacehub_api_token=HF_TOKEN,
        temperature=0
    )

    # Texto de exemplo para tokenização
    text_to_tokenize = "O Langchain é um framework poderoso para construir aplicações com modelos de linguagem grandes."

    # Contar tokens com Langchain
    token_count = llm.get_num_tokens(text_to_tokenize)
    print(f"Número de tokens para o texto: {token_count}")

    # Conectar ao MongoDB e Armazenar
    client = None
    try:
        client = pymongo.MongoClient(MONGO_URI)
        db = client[DB_NAME]
        token_collection = db[COLLECTION_NAME]
        print("Conexão com MongoDB estabelecida com sucesso.")

        store_token_usage_in_mongodb(
            text=text_to_tokenize,
            token_count=token_count,
            llm_model_name=llm.repo_id,
            collection=token_collection
        )

    except pymongo.errors.ConnectionFailure as e:
        print(f"Erro de conexão com o MongoDB: {e}")
    except Exception as e:
        print(f"Ocorreu um erro geral: {e}")
    finally:
        if client:
            client.close()
            print("Conexão com MongoDB fechada.")